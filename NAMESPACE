# Generated by roxygen2: do not edit by hand

S3method(build_model,gbm)
S3method(build_model,lda)
S3method(build_model,naiveBayes)
S3method(build_model,randomForest)
S3method(build_model,rpart)
S3method(extract_params,Arima)
S3method(extract_params,HoltWinters)
S3method(extract_params,cv.glmnet)
S3method(extract_params,ets)
S3method(extract_params,forecast)
S3method(extract_params,gbm)
S3method(extract_params,glm)
S3method(extract_params,glmnet)
S3method(extract_params,ipredknn)
S3method(extract_params,kcca)
S3method(extract_params,kccasimple)
S3method(extract_params,kmeans)
S3method(extract_params,knn3)
S3method(extract_params,knnreg)
S3method(extract_params,lda)
S3method(extract_params,naiveBayes)
S3method(extract_params,randomForest)
S3method(extract_params,rpart)
S3method(pfa,Arima)
S3method(pfa,HoltWinters)
S3method(pfa,cv.glmnet)
S3method(pfa,ets)
S3method(pfa,forecast)
S3method(pfa,gbm)
S3method(pfa,glm)
S3method(pfa,glmnet)
S3method(pfa,ipredknn)
S3method(pfa,kcca)
S3method(pfa,kccasimple)
S3method(pfa,kmeans)
S3method(pfa,knn3)
S3method(pfa,knnreg)
S3method(pfa,lda)
S3method(pfa,lm)
S3method(pfa,naiveBayes)
S3method(pfa,randomForest)
S3method(pfa,rpart)
export(avro_array)
export(avro_boolean)
export(avro_bytes)
export(avro_double)
export(avro_enum)
export(avro_fixed)
export(avro_float)
export(avro_from_df)
export(avro_fullname)
export(avro_int)
export(avro_long)
export(avro_map)
export(avro_null)
export(avro_record)
export(avro_string)
export(avro_type)
export(avro_typemap)
export(avro_union)
export(build_model)
export(extract_params)
export(gen_unique_eng_name)
export(gen_unique_enum_name)
export(gen_unique_fixed_name)
export(gen_unique_rec_name)
export(gen_unique_symb_name)
export(json_array)
export(json_map)
export(pfa)
export(pfa_cell)
export(pfa_document)
export(pfa_engine)
export(pfa_expr)
export(pfa_pool)
export(read_pfa)
export(write_pfa)
importFrom(gbm,pretty.gbm.tree)
importFrom(glmnet,coef.glmnet)
importFrom(jsonlite,toJSON)
importFrom(methods,is)
importFrom(stats,coef)
importFrom(stats,gaussian)
importFrom(stats,setNames)
importFrom(utils,capture.output)
importFrom(utils,head)
importFrom(utils,tail)
